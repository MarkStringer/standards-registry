name: deploy-dev

on:
  workflow_run:
    branches:
      - master
    workflows:
      - build-and-test
    types:
      - completed
    conclusion:
      - success

defaults:
  run:
    working-directory: ui

jobs:

  docker-build:
    runs-on: ubuntu-latest
    environment: dev
    env:
      AWS_REGION: eu-west-2
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: configure credentials (using us-east-1)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Public ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
      - name: build and push
        id: build-image
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: nhsx-standards-directory
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and push it to ECR
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  ckan-deploy:
    runs-on: ubuntu-latest
    environment: dev
    env:
      AWS_REGION: eu-west-2
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: configure credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: helm deploy
        uses: koslib/helm-eks-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBECONFIG_FILE }}
        with:
          command: >-
            helm upgrade ckan -n dev --repo https://keitaro-charts.storage.googleapis.com --install --wait ckan -f ./charts/ckan/values.yaml
            --set ckan.sysadminApiToken='${{ secrets.CKAN_SYSADMIN_API_TOKEN }}'
            --set ckan.sysadminName='${{ secrets.CKAN_SYSADMIN_NAME }}'
            --set ckan.sysadminPassword='${{ secrets.CKAN_SYSADMIN_PASS }}'
            --set ckan.CkanDBPass='${{ secrets.CKAN_DB_PASS }}'
            --set ckan.DatastoreRWDBPass='${{ secrets.CKAN_DATASTORE_RW_DB_PASS }}'
            --set ckan.DatastoreRODBPass='${{ secrets.CKAN_SITE_URL }}'
            --set ckan.siteUrl='${{ secrets.CKAN_SITE_URL }}'
            --set MasterDBPass='${{ secrets.MASTER_DB_PASS }}'
            --set DBHost='${{ secrets.DBHOST }}'
      - run: echo deploydev
