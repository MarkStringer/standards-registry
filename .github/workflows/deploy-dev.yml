name: deploy-dev

on:
  workflow_run:
    branches:
      - master
    workflows:
      - build-and-test
    types:
      - completed
    conclusion:
      - success

defaults:
  run:
    working-directory: ui

jobs:

  dockerbuild:
    runs-on: ubuntu-latest
    environment: dev
    env:
      AWS_REGION: us-east-1
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: configure credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Public ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
      - name: build and push
        id: build-image
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: nhsx-standards-directory
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and push it to ECR
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - name: Helm Deploy
        uses: 'deliverybot/helm@v1'
        with:
          release: 'ckan'
          namespace: 'default'
          chart: 'keitaro-charts/ckan'
          token: '${{ github.token }}'
          repo: https://keitaro-charts.storage.googleapis.com
          repo-alias: keitaro-charts
          value-files: './charts/ckan/values.yaml'
          values: |
            ckan.sysadminApiToken: ${{ secrets.CKAN_SYSADMIN_API_TOKEN }}
            ckan.sysadminName: ${{ secrets.CKAN_SYSADMIN_API_TOKEN }}
            ckan.sysadminPassword: ${{ secrets.CKAN_SYSADMIN_PASS }}
            ckan.CkanDBPass: ${{ secrets.CKAN_DB_PASS }}
            ckan.DatastoreRWDBPass: ${{ secrets.CKAN_DATASTORE_RW_DB_PASS }}
            ckan.DatastoreRODBPass: ${{ secrets.CKAN_DATASTORE_RO_DB_PASS }}
            ckan.siteUrl: ${{ secrets.CKAN_SITE_URL }}
            MasterDBPass: ${{ secrets.MASTER_DB_PASS }}
        env:
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG_FILE }}'
      - run: echo deploydev
